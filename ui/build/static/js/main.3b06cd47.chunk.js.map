{"version":3,"sources":["theme/palette.js","theme/typography.js","theme/overrides/MuiIconButton.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/overrides/MuiListItem.js","theme/index.js","components/RouteWithLayout/RouteWithLayout.js","store/actionTypes.js","store/actions.js","components/HelpDialog/index.jsx","services.js","components/InitialStep/index.jsx","components/CheckIngredients/index.jsx","components/FirebaseStorage/index.jsx","components/UserManagement/index.jsx","components/Websocket/index.jsx","components/Database/index.jsx","components/GoogleReCaptcha/index.jsx","components/OAuth/index.jsx","components/DepolyDialog/index.jsx","components/OFCC/index.js","components/SelectSetup/index.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Icons/Icons.js","views/NotFound/NotFound.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","views/Typography/Typography.js","components/StepDone/index.js","pages/Setup/index.jsx","Routes.js","store/enhancers/monitorReducer.js","store/middleware/logger.js","store/reducers.js","components/DialogInfo/index.jsx","App.js","store/index.js","serviceWorker.js","index.js"],"names":["white","black","primary","contrastText","dark","colors","orange","main","light","secondary","blue","success","green","info","warning","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","root","backgroundColor","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","typography","borderBottom","MuiTableHead","MuiTypography","gutterBottom","marginBottom","MuiListItem","container","listStyleType","paddingTop","theme","createMuiTheme","overrides","zIndex","appBar","drawer","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","actionTypes","SET_SETUP_STATE","SET_SETUP_STEP","SET_INPUT","SET_DEPLOY_OPEN","POP_MESSAGE","SET_STEP_CONDITION","SHOW_INFO_DIALOG","HIDE_INFO_DIALOG","START_STEP","CHECK_STEP","state","type","payload","key","value","message","HelpDialog","React","useState","scroll","open","onClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","dividers","DialogContentText","ref","tabIndex","children","DialogActions","Button","onClick","action","axios","post","then","resp","console","log","data","catch","err","url","useStyles","makeStyles","minWidth","bullet","display","margin","transform","pos","address","height","InitialStep","classes","dispatch","className","useDispatch","githubUsername","useSelector","projectDirectory","handleInputChange","name","event","currentTarget","actions","helpOpen","setHelpOpen","Card","variant","CardContent","services","TextField","required","label","onChange","fullWidth","CardActions","GreenCheckbox","withStyles","checked","Checkbox","progress","CheckIngredients","loadingCheckIngredients","installKubeseal","githubUsernameRegisterd","cloneTelarWeb","cloneTsServerless","cloneTsUi","openFaaSApp","openFaaSAppHasRepos","githubSSHKey","gilad","jason","antoine","handleChange","checkBox","CircularProgress","size","FormControl","formControl","FormLabel","FormGroup","FormControlLabel","control","readOnly","FirebaseStorage","bucketName","firebaseStorage","loadingFirebaseStorage","helpType","UserManagement","adminUsername","adminPassword","gmail","gmailPassword","Websocket","gateway","payloadSecret","websocketURL","websocketConnection","loadingWebsocket","InputProps","readonly","Database","mongoDBHost","mongoDBPassword","mongoDBName","mongoDBConnection","loadingMongoDB","GoogleReCaptcha","siteKeyRecaptcha","recaptchaKey","OAuth","githubOAuthSecret","githubOAuthClientID","DeployDialog","loadingStackYaml","loadingCreateSecret","loadingPublicPrivateKey","deployTelarWeb","deployTsServerless","deploySocialUi","disableBackdropClick","disableEscapeKeyDown","width","marginTop","spacing","marginRight","actionsContainer","resetContainer","padding","validInputs","inputs","input","trim","validCheckbox","OFCC","setupStep","deployOpen","stepCondition","steps","handleNext","Stepper","activeStep","orientation","map","index","Step","StepLabel","StepContent","step","getStepContent","disabled","length","cardActions","justifyContent","SelectSetup","setValue","CardActionArea","CardMedia","alt","image","href","target","RadioGroup","aria-label","Radio","preventDefault","Footer","clsx","Link","flexDirection","alignItems","minHeight","avatar","withRouter","pathname","history","location","matchFunction","matchPath","path","strict","params","user","toLowerCase","bio","Avatar","RouterLink","src","to","item","paddingBottom","fontWeightMedium","active","CustomRouterLink","forwardRef","style","flexGrow","SidebarNav","pages","List","page","ListItem","disableGutters","activeClassName","media","textAlign","content","breakpoints","up","nav","Drawer","anchor","signOutButton","marginLeft","Topbar","onSidebarOpen","notifications","AppBar","Toolbar","Hidden","mdDown","IconButton","Badge","badgeContent","lgUp","shiftContent","paddingLeft","Main","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","position","Minimal","iframe","border","maxWidth","NotFound","Grid","justify","lg","xs","StepDone","SetupComponent","setupState","Container","Routes","exact","from","MainLayout","NotFoundView","MinimalLayout","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","logger","store","next","group","result","getState","groupEnd","infoDialog","appReducer","valid","popMessage","DialogInfo","handleClose","toUpperCase","slice","handleOpenURL","autoFocus","preloadedState","browserHistory","createBrowserHistory","installGit","firebaseServiceAccount","configureStore","rootReducer","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","AppSnackbar","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Fragment","undefined","window","WebSocket","alert","socket","onopen","onmessage","e","JSON","parse","onclose","initWS","App","ThemeProvider","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b06cd47.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[500],\n    light: colors.orange[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\nimport MuiListItem from './MuiListItem';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography,\n  MuiListItem\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","\n\nexport default {\n  container: {\n    listStyleType: 'none',\n    paddingTop: 5\n\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","const actionTypes = {\n\n    // Client Actions\n    SET_SETUP_STATE: 'SET_SETUP_STATE',\n    SET_SETUP_STEP: 'SET_SETUP_STEP',\n    SET_INPUT: 'SET_INPUT',\n    SET_DEPLOY_OPEN: 'SET_DEPLOY_OPEN',\n    POP_MESSAGE: 'POP_MESSAGE',\n    SET_STEP_CONDITION: 'SET_STEP_CONDITION',\n    SHOW_INFO_DIALOG: 'SHOW_INFO_DIALOG',\n    HIDE_INFO_DIALOG: 'HIDE_INFO_DIALOG',\n    \n    // Server HTTP Actions\n    START_STEP : \"START_STEP\",\n    CHECK_STEP : \"CHECK_STEP\",\n}\n\nexport default actionTypes","import actionTypes from './actionTypes'\n\n\n// ******* Client Actions ******* //\nconst setSetupState = (state) => {\n    return {\n        type: actionTypes.SET_SETUP_STATE,\n        payload: {state}\n    }\n}\n\nconst setSetupStep = (step) => {\n    return {\n        type: actionTypes.SET_SETUP_STEP,\n        payload: {step}\n    }\n}\n\nconst setStepCondition = (step, valid) => {\n    return {\n        type: actionTypes.SET_STEP_CONDITION,\n        payload: {step, valid}\n    }\n}\n\nconst setInput = (key,value) => {\n    return {\n        type: actionTypes.SET_INPUT,\n        payload: {key, value}\n    }\n}\n\nconst setDeployOpen = (open) => {\n    return {\n        type: actionTypes.SET_DEPLOY_OPEN,\n        payload: {open}\n    }\n}\n\nconst popMessage = (message) => {\n    return {\n        type: actionTypes.POP_MESSAGE,\n        payload: {message}\n    }\n}\n\nconst showInfoDialog = (message, url) => {\n    return {\n        type: actionTypes.SHOW_INFO_DIALOG,\n        payload: {message, url}\n    }\n}\n\nconst hideInfoDialog = () => {\n    return {\n        type: actionTypes.HIDE_INFO_DIALOG,\n        payload: {}\n    }\n}\n\n\n// ******* Server HTTP Actions ******* //\nconst startStep = () => {\n    return {\n        type: actionTypes.START_STEP,\n        payload: {}\n    }\n}\n\nconst checkStep = (payload) => {\n    return {\n        type: actionTypes.CHECK_STEP,\n        payload\n    }\n}\n\nexport default {\n    setSetupState,\n    setSetupStep,\n    setStepCondition,\n    setInput,\n    setDeployOpen,\n    popMessage,\n    showInfoDialog,\n    hideInfoDialog,\n    startStep,\n    checkStep\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function HelpDialog(props) {\n\n  const [scroll, setScroll] = React.useState('paper');\n  const {open, onClose} = props\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n           {props.text}\n          </DialogContentText>\n          {props.children}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import axios from \"axios\";\nconst dispatchServer = (action) => {\n\n    axios\n    .post(\"/dispatch\", action) // GET request to URL /hello\n    .then(resp => console.log(resp.data)) // save response to state\n    .catch(err => console.log(err)); // catch error\n}\n\nconst openURL = (url) => {\n\n    axios\n    .post(\"/open-url\", {url}) // GET request to URL /hello\n    .then(resp => console.log(resp.data)) // save response to state\n    .catch(err => console.log(err)); // catch error\n}\n\n\nexport default {\n    dispatchServer,\n    openURL\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Divider } from '@material-ui/core';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  address: {\n    height: '100%'\n  }\n});\n\nexport default function InitialStep() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const dispatch = useDispatch()\n  const githubUsername = useSelector(state => state['inputs']['githubUsername'])\n  const projectDirectory = useSelector(state => state['inputs']['projectDirectory'])\n  const handleInputChange = (name) => (event) => {\n    const {value} = event.currentTarget\n    dispatch(actions.setInput(name, value))\n  }\n\n\n\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleHelp = () => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/1.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleHelp}>\n        Need Help?\n      </Button>\n        <br />\n        <br />\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n          Enter your valid Github user name.\n        </Typography>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Github Username\"\n          onChange={handleInputChange('githubUsername')}\n          value={githubUsername}\n          variant=\"outlined\"\n        />\n        <br />\n        <br />\n        <TextField\n          className={classes.address}\n          fullWidth\n          required\n          id=\"outlined-required\"\n          label=\"Project Directory\"\n          value={projectDirectory}\n          onChange={handleInputChange('projectDirectory')}\n          variant=\"outlined\"\n        />\n      </CardContent>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n       {helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { green } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  progress: {\n    margin: '10px'\n  }\n});\n\nexport default function CheckIngredients() {\n  const dispatch = useDispatch()\n\n  const githubUsername = useSelector(state => state['inputs']['githubUsername'])\n\n  const loadingCheckIngredients = useSelector(state => state['inputs']['loadingCheckIngredients'])\n\n  const installKubeseal = useSelector(state => state['inputs']['installKubeseal'])\n  const githubUsernameRegisterd = useSelector(state => state['inputs']['githubUsernameRegisterd'])\n  const cloneTelarWeb = useSelector(state => state['inputs']['cloneTelarWeb'])\n  const cloneTsServerless = useSelector(state => state['inputs']['cloneTsServerless'])\n  const cloneTsUi = useSelector(state => state['inputs']['cloneTsUi'])\n  const openFaaSApp = useSelector(state => state['inputs']['openFaaSApp'])\n  const openFaaSAppHasRepos = useSelector(state => state['inputs']['openFaaSAppHasRepos'])\n  const githubSSHKey = useSelector(state => state['inputs']['githubSSHKey'])\n\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleHelp = () => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/2.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n\n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.checked))\n  };\n  const checkBox = (checked) => {\n    if (checked) {\n      return <GreenCheckbox checked={true} />\n    }\n    return <CircularProgress className={classes.progress} size={17} color=\"secondary\" />\n  }\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleHelp}>\n        Need Help?\n      </Button>\n      <br/>\n      <br/>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Ingredients</FormLabel>\n          <FormGroup>\n           \n          \n            <FormControlLabel\n              control={\n                <Checkbox readOnly={loadingCheckIngredients} checked={openFaaSApp} onChange={handleChange('openFaaSApp')} />\n              }\n              label={`The OpenFaaS GitHub App is installed.`}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox readOnly={loadingCheckIngredients} checked={openFaaSAppHasRepos} onChange={handleChange('openFaaSAppHasRepos')} />\n              }\n              label={`Add repositories in the OpenFaaS GitHub App.`}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox readOnly={loadingCheckIngredients} checked={githubSSHKey} onChange={handleChange('githubSSHKey')} />\n              }\n              label={`Adding the SSH key to the Github.`}\n            />\n\n            {\n              loadingCheckIngredients && (\n                <>\n                <FormControlLabel\n              control={checkBox(installKubeseal)}\n              checked={installKubeseal}\n              label=\"Install Kubeseal\"\n            />\n\n            <FormControlLabel\n              control={checkBox(githubUsernameRegisterd)}\n              checked={githubUsernameRegisterd}\n              label={<span>Check <b>{githubUsername}</b> username is registered in OpenFaaS Cloud Community Cluster</span>}\n            />\n            <FormControlLabel\n              control={checkBox(cloneTelarWeb)}\n              checked={cloneTelarWeb}\n              label={<span>Check the fork on <b>{githubUsername}</b> & Clone telar-web repository.</span>}\n            />\n            <FormControlLabel\n              control={checkBox(cloneTsServerless)}\n              checked={cloneTsServerless}\n              label={<span>Check the fork on <b>{githubUsername}</b> & Clone ts-serverless repository.</span>}\n              />\n            <FormControlLabel\n              control={checkBox(cloneTsUi)}\n              checked={cloneTsUi}\n              label={<span>Check the fork on <b>{githubUsername}</b> & Clone ts-ui repository.</span>}\n            />\n                </>\n              )\n            }\n          </FormGroup>\n        </FormControl>\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n       {helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  progress: {\n    margin: '10px'\n  }\n});\n\nexport default function FirebaseStorage() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const bucketName = useSelector(state => state['inputs']['bucketName'])\n  const firebaseServiceAccount = useSelector(state => state['inputs']['firebaseServiceAccount'])\n  const firebaseStorage = useSelector(state => state['inputs']['firebaseStorage'])\n\n  const loadingFirebaseStorage = useSelector(state => state['inputs']['loadingFirebaseStorage'])\n\n  const bull = <span className={classes.bullet}>•</span>;\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  // 0 : instruction\n  // 1 : warning\n  const [helpType, setHelpType] = React.useState(0);\n\n  const handleHelp = (helpType) => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/3.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n\n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n          In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code.\n  </Typography>\n        <br />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  )\n\n  const warningContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n        ⚠️ We strictly recommend you to use your own Firebase Storage. \n        Public Firebase Storage only use for testing, because everybody can see your data and also there is no garanty for data persistance. \n        Public Firebase Storage is a free and shared Firebase Storage account! \n  </Typography>\n        <br />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  )\n\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name, event.currentTarget.value))\n  };\n  const checkBox = (checked) => {\n    if (checked) {\n      return <GreenCheckbox checked={true} />\n    }\n    return <CircularProgress className={classes.progress} size={17} color=\"secondary\" />\n  }\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleHelp(0)}>\n          Need Help?\n      </Button>\n      <br />\n        <br />\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n          Enter bucket name and download service account file in project directory\n        </Typography>\n        <br />\n        <TextField\n          required\n          onChange={handleChange('bucketName')}\n          value={bucketName}\n          id=\"outlined-required\"\n          label=\"Bucket Name\"\n\n          variant=\"outlined\"\n        />\n        <br />\n        <br />\n\n       { loadingFirebaseStorage && (\n         \n         <FormControl component=\"fieldset\" className={classes.formControl}>\n\n          <FormGroup>\n            <FormControlLabel\n              control={checkBox(firebaseStorage)}\n              label=\"Check serviceAccount.json file\"\n              checked={firebaseStorage}\n            />\n\n            <FormControlLabel\n              control={checkBox(firebaseStorage)}\n              label=\"Check firebase storage\"\n              checked={firebaseStorage}\n            />\n\n          </FormGroup>\n        </FormControl>)}\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={helpType === 0 ? 'Instruction' : '⚠️Warning ⚠️'}>\n        {helpType === 0 ? helpContent() : warningContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Divider } from '@material-ui/core';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  address: {\n    height: '100%'\n  }\n});\n\nexport default function UserManagement() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const adminUsername = useSelector(state => state['inputs']['adminUsername'])\n  const adminPassword = useSelector(state => state['inputs']['adminPassword'])\n  const gmail = useSelector(state => state['inputs']['gmail'])\n  const gmailPassword = useSelector(state => state['inputs']['gmailPassword'])\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleHelp = () => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/7.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.value))\n  };\n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleHelp}>\n        Need Help?\n      </Button>\n\n        <br />\n      <br />\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n         Enter Admin user information.\n        </Typography>\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Admin Email\"\n        \n        variant=\"outlined\"\n        value={adminUsername}\n        onChange={handleChange('adminUsername')}\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Password\"\n        \n        variant=\"outlined\"\n        value={adminPassword}\n        onChange={handleChange('adminPassword')}\n      />\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n         Enter your Gmail information.\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n         It will be used for sending confirmation and verification email to users.\n          <br />\n        </Typography>\n        <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Email\"\n        \n        variant=\"outlined\"\n        value={gmail}\n        onChange={handleChange('gmail')}\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Password\"\n        variant=\"outlined\"\n        value={gmailPassword}\n        onChange={handleChange('gmailPassword')}\n      />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n       {helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  progress: {\n    margin: '10px'\n  }\n});\n\nexport default function Websocket() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const gateway = useSelector(state => state['inputs']['gateway'])\n  const payloadSecret = useSelector(state => state['inputs']['payloadSecret'])\n  const websocketURL = useSelector(state => state['inputs']['websocketURL'])\n  const websocketConnection = useSelector(state => state['inputs']['websocketConnection'])\n\n  const loadingWebsocket = useSelector(state => state['inputs']['loadingWebsocket'])\n\n  const bull = <span className={classes.bullet}>•</span>;\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleHelp = () => {\n   services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/8.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.value))\n  };\n  const checkBox = (checked) => {\n    if (checked) {\n      return <GreenCheckbox checked={true} />\n    }\n    return <CircularProgress className={classes.progress} size={17} color=\"secondary\" />\n  }\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleHelp}>\n        Need Help?\n      </Button>\n      <br />\n        <br />\n      <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n       Enter bucket name and download service account file in project directory\n        </Typography>\n       \n        <TextField\n        InputProps={{\n          readonly: true,\n        }}\n        id=\"outlined-required\"\n        label=\"Gateway\"\n        value={gateway}\n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n        <TextField\n        InputProps={{\n          readonly: true,\n        }}\n        id=\"outlined-required\"\n        label=\"Payload Secret\"\n        value={payloadSecret}\n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        onChange={handleChange('websocketURL')}\n        id=\"outlined-required\"\n        label=\"Websocket URL\"\n        value={websocketURL}\n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n      \n        {loadingWebsocket && (<FormControl component=\"fieldset\" className={classes.formControl}>\n\n          <FormGroup>\n          <FormControlLabel\n          control={checkBox(websocketConnection)}\n          checked={websocketConnection}\n          label=\"Check websocket server connection\"\n        />\n           \n           \n          </FormGroup>\n        </FormControl>)}\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n       {helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { green } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  progress: {\n    margin: '10px'\n  }\n});\n\nexport default function Database() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const mongoDBHost = useSelector(state => state['inputs']['mongoDBHost'])\n  const mongoDBPassword = useSelector(state => state['inputs']['mongoDBPassword'])\n  const mongoDBName = useSelector(state => state['inputs']['mongoDBName'])\n  const mongoDBConnection = useSelector(state => state['inputs']['mongoDBConnection'])\n\n  const loadingMongoDB = useSelector(state => state['inputs']['loadingMongoDB'])\n\n  const bull = <span className={classes.bullet}>•</span>;\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  // 0 : instruction\n  // 1 : warning\n  const [helpType, setHelpType] = React.useState(0);\n\n  const handleHelp = (helpType) => {\n   services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/4.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n\n  const warningContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n        ⚠️ We strictly recommend you to use your own MongoDB. \n        Public MongoDB only use for testing, because everybody can see your data and also there is no garanty for data persistance. \n        Public MongoDB is a free and shared MongoDB account! \n  </Typography>\n        <br />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  )\n\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.value))\n  };\n  const checkBox = (checked) => {\n    if (checked) {\n      return <GreenCheckbox checked={true} />\n    }\n    return <CircularProgress className={classes.progress} size={17} color=\"secondary\" />\n  }\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleHelp(0)}>\n          Need Help?\n      </Button>\n      <br />\n        <br />\n      <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n       Fill the field for MongoDB database\n        </Typography>\n        <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Host\"\n        value={mongoDBHost}\n        onChange={handleChange('mongoDBHost')}\n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Database Name\"\n        value={mongoDBName}\n        onChange={handleChange('mongoDBName')}\n        \n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Password\"\n        \n        value={mongoDBPassword}\n        onChange={handleChange('mongoDBPassword')}\n        variant=\"outlined\"\n      />\n      <br />\n      <br />\n      \n        {loadingMongoDB && (<FormControl component=\"fieldset\" className={classes.formControl}>\n\n          <FormGroup>\n          \n          <FormControlLabel\n              control={checkBox(mongoDBConnection)}\n              checked={mongoDBConnection}\n              label=\"Check MongoDB connection\"\n            />\n\n           \n          </FormGroup>\n        </FormControl>)}\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={helpType === 0 ? 'Instruction' : '⚠️Warning ⚠️'}>\n        {helpType === 0 ? helpContent() : warningContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Divider } from '@material-ui/core';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  address: {\n    height: '100%'\n  }\n});\n\nexport default function GoogleReCaptcha() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const siteKeyRecaptcha = useSelector(state => state['inputs']['siteKeyRecaptcha'])\n  const recaptchaKey = useSelector(state => state['inputs']['recaptchaKey'])\n  const bull = <span className={classes.bullet}>•</span>;\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  // 0 : instruction\n  // 1 : warning\n  const [helpType, setHelpType] = React.useState(0);\n\n  const handleHelp = (helpType) => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/5.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.value))\n  };\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleHelp(0)}>\n          Need Help?\n      </Button>\n      <br />\n        <br />\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n        Enter your valid Google reCaptcha site key and secret key\n        </Typography>\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Site Key\"\n        \n        variant=\"outlined\"\n        value={siteKeyRecaptcha}\n        onChange={handleChange('siteKeyRecaptcha')}\n      />\n      <br />\n      <br />\n        <TextField\n        className={classes.address}\n        required\n        id=\"outlined-required\"\n        label=\"Secret Key\"\n        \n        variant=\"outlined\"\n        value={recaptchaKey}\n        onChange={handleChange('recaptchaKey')}\n      />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n        { helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Divider } from '@material-ui/core';\nimport actions from '../../store/actions'\nimport HelpDialog from '../HelpDialog';\nimport services from '../../services';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  address: {\n    height: '100%'\n  }\n});\n\nexport default function OAuth() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const githubOAuthSecret = useSelector(state => state['inputs']['githubOAuthSecret'])\n  const githubOAuthClientID = useSelector(state => state['inputs']['githubOAuthClientID'])\n  const bull = <span className={classes.bullet}>•</span>;\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleHelp = () => {\n    services.openURL(\"https://github.com/Qolzam/telar-cli/blob/master/docs/ofcc-setup/6.md\")\n  };\n\n  const handleCloseHelp = () => {\n    setHelpOpen(false);\n  };\n  \n  const helpContent = () => (\n    <Card className={classes.root} variant=\"outlined\">\n    <CardContent>\n      <Typography variant={'h5'} color=\"textPrimary\" gutterBottom>\n      In this step you need to enter your Github account username and a directory path where you want to keep Telar Social project source code. \n  </Typography>\n  <br/>\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </Card>\n  )\n  const handleChange = name => event => {\n    dispatch(actions.setInput(name,event.currentTarget.value))\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n         Enter your valid Github OAuth client ID and secret key.\n        </Typography>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleHelp}>\n        Need Help?\n      </Button>\n        <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Github OAuth Client ID\"\n        \n        variant=\"outlined\"\n        value={githubOAuthClientID}\n        onChange={handleChange('githubOAuthClientID')}\n      />\n      <br />\n      <br />\n        <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Github OAuth Client Secret\"\n        \n        variant=\"outlined\"\n        value={githubOAuthSecret}\n        onChange={handleChange('githubOAuthSecret')}\n      />\n      <br />\n      <br />\n      </CardContent>\n      <CardActions>\n      </CardActions>\n      <HelpDialog open={helpOpen} onClose={handleCloseHelp} title={'Instruction'}>\n       {helpContent()}\n      </HelpDialog>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    progress: {\n      margin: '10px'\n    }\n  });\n  \nexport default function DeployDialog(props) {\n  const classes = useStyles();\n  const {open, onClose} = props\n\n  const loadingStackYaml = useSelector(state => state['inputs']['loadingStackYaml'])\n  const loadingCreateSecret = useSelector(state => state['inputs']['loadingCreateSecret'])\n  const loadingPublicPrivateKey = useSelector(state => state['inputs']['loadingPublicPrivateKey'])\n  const deployTelarWeb = useSelector(state => state['inputs']['deployTelarWeb'])\n  const deployTsServerless = useSelector(state => state['inputs']['deployTsServerless'])\n  const deploySocialUi = useSelector(state => state['inputs']['deploySocialUi'])\n\n  const handleClose = () => {\n    onClose()\n  };\n  const checkBox = (checked) => {\n    if (checked) {\n      return <GreenCheckbox checked={true} />\n    }\n    return <CircularProgress className={classes.progress} size={17} color=\"secondary\" />\n  }\n\n  return (\n      <Dialog\n        open={open}\n        disableBackdropClick={true}\n        disableEscapeKeyDown={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Deploying\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Deploying the project to OpenFaaS Cloud Community Cluster\n          </DialogContentText>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormGroup>\n\n\n            <FormControlLabel\n              control={checkBox(loadingStackYaml)}\n              checked={loadingStackYaml}\n              label=\"Creating Configurations\"\n            />\n\n            <FormControlLabel\n              control={checkBox(loadingCreateSecret)}\n              checked={loadingCreateSecret}\n              label=\"Creating Secrets\"\n            />\n\n            <FormControlLabel\n              control={checkBox(loadingPublicPrivateKey)}\n              checked={loadingPublicPrivateKey}\n              label=\"Deploying Telar Web\"\n            />\n\n            <FormControlLabel\n              control={checkBox(deployTelarWeb)}\n              checked={deployTelarWeb}\n              label=\"Deploying Telar Web\"\n            />\n\n            <FormControlLabel\n              control={checkBox(deployTsServerless)}\n              checked={deployTsServerless}\n              label=\"Deploying Telar Social Serverless\"\n            />\n\n            <FormControlLabel\n              control={checkBox(deploySocialUi)}\n              checked={deploySocialUi}\n              label=\"Deploying Telar Social User Interface\"\n            />\n           \n           \n            </FormGroup>\n            </FormControl>\n        </DialogContent>\n        <DialogActions>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport GithubUsername from '../InitialStep';\nimport CheckIngredients from '../CheckIngredients';\nimport FirebaseStorage from '../FirebaseStorage';\nimport UserManagement from '../UserManagement';\nimport WebSocket from '../Websocket';\nimport Database from '../Database';\nimport GoogleReCaptcha from '../GoogleReCaptcha';\nimport OAuth from '../OAuth';\nimport DeployDialog from '../DepolyDialog';\nimport actions from '../../store/actions'\nimport services from '../../services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n  `Let's start`, \n  'Check ingredients', \n  'Firebase Storage', \n  'MongoDB', \n  'Google reCAPTCHA', \n  'Github OAuth',\n  'User Manegement',\n  'Websocket'  \n];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <GithubUsername />;\n    case 1:\n      return  <CheckIngredients />;\n    case 2:\n      return  <FirebaseStorage />;\n    case 3:\n      return  <Database />;\n    case 4:\n      return  <GoogleReCaptcha />;\n    case 5:\n      return  <OAuth />;\n    case 6:\n      return  <UserManagement />;\n    case 7:\n      return  <WebSocket />;\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst validInput = (value) => {\n  if(value && value.trim() !== \"\") {\n    return true\n  }\n  return false\n}\n\nconst validInputs = (state, inputs) => {\n  for (const input of inputs) {\n    const isValid = validInput(state['inputs'][input])\n    if (!isValid) {\n      return false\n    }\n   }\n   return true\n\n}\n\nconst validCheckbox = (state, inputs) => {\n  for (const input of inputs) {\n    if (!state['inputs'][input]) {\n      return false\n    }\n  }\n   \n    return true\n}\n\n\n\nexport default function OFCC() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const setupStep = useSelector(state => state['setupStep'])\n  const deployOpen = useSelector(state => state['deployOpen'])\n  const stepCondition = {}\n  const steps = getSteps();\n\n\n  // ***** Conditions ***** //\n\n const state = useSelector(state =>  state) \n\n  // Init step\n  stepCondition[0]= (validInputs(state, ['githubUsername','projectDirectory']))\n  \n  // Check ingredients\n  stepCondition[1] =(validCheckbox(state, ['openFaaSApp', 'openFaaSAppHasRepos', 'githubSSHKey' ]) && !validCheckbox(state,['loadingCheckIngredients']))\n\n  // Firebase storage\n  stepCondition[2] = (!validCheckbox(state, ['loadingFirebaseStorage'] ) && validInputs(state, ['bucketName']) === true)\n\n  // Database\n  stepCondition[3] = (!validCheckbox(state, ['loadingMongoDB'] ) && validInputs(state, ['mongoDBHost', 'mongoDBPassword', 'mongoDBName']) === true)\n\n  // Firebase storage\n  stepCondition[4] = (validInputs(state, ['siteKeyRecaptcha', 'recaptchaKey']))\n\n  // OAuth\n  stepCondition[5] = (validInputs(state, ['githubOAuthSecret']))\n\n  // User management\n  stepCondition[6] = (validInputs(state, ['adminUsername', 'adminPassword', 'gmail', 'gmailPassword']))\n\n  // Websocket\n  stepCondition[7] = ((!validCheckbox(state, ['loadingWebsocket'] ) || validCheckbox(state, ['websocketConnection'] )) && validInputs(state, ['gateway', 'payloadSecret', 'websocketURL']) === true)\n\n  const handleCloseDeploy = () => {\n    dispatch(actions.setInput('deployOpen', false))\n  };\n\n  const handleNext = () => {\n\n    services.dispatchServer(actions.checkStep(state))\n    \n  };\n\n\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={setupStep} orientation=\"vertical\" >\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(index)}\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                    disabled={stepCondition[setupStep] !== true}\n                  >\n                    {setupStep === steps.length - 1 ? 'Deploy' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      \n\n      <DeployDialog open={deployOpen} onClose={handleCloseDeploy} />\n    </div>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport actions from '../../store/actions'\nimport services from '../../services';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(3),\n    },\n    cardActions: {\n        justifyContent: \"flex-end\"\n    }\n}));\n\nexport default function SelectSetup() {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n    const [value, setValue] = React.useState('ofc');\n\n    const handleChange = event => {\n        \n        setValue(event.target.value);\n    };\n\n    const handleNext = event => {\n        services.dispatchServer(actions.startStep())\n       dispatch(actions.setSetupState('progress'))\n    };\n\n    const handleVote = event => {\n        event.preventDefault()\n       services.openURL('https://github.com/Qolzam/feedback/issues/1')\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image=\"https://image.slidesharecdn.com/2019-01-openfaas-when-functions-collide-docks-amsterdam-190128104130/95/docker-and-serverless-randstad-jan-2019-openfaas-serverless-when-functions-and-gitops-collide-47-638.jpg?cb=1548672210\"\n                    title=\"Contemplative Reptile\"\n                />\n            </CardActionArea>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    OpenFaaS Cloud Community Cluster\n          </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" >\n                    The <a href=\"https://docs.openfaas.com/openfaas-cloud/community-cluster/\" target=\"_blank\">OpenFaaS Cloud Community Cluster</a> is a hosted version of OpenFaaS Cloud. The OpenFaaS Cloud Community Cluster is free to use and probably the quickest and easiest way to try out OpenFaaS. You don't have to set up any servers or even think about Docker, or Kubernetes.\n          </Typography>\n          <br/>\n\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Choose your setup</FormLabel>\n                    <RadioGroup aria-label=\"setup-select\" name=\"setup-select\" value={value} onChange={handleChange}>\n                        <FormControlLabel value=\"ofc\" control={<Radio />} label=\"OpenFaaS Cloud Community Cluster\" />\n                        <FormControlLabel disabled value=\"eks\" control={<Radio />} label=\"AWS EKS\" />\n                        <FormControlLabel disabled value=\"gke\" control={<Radio />} label=\"Google Kubernetes Engine\" />\n                        <FormControlLabel disabled value=\"aks\" control={<Radio />} label=\"Azure Kubernetes Service\" />\n                        <FormControlLabel disabled value=\"local\" control={<Radio />} label=\"Self-host OpenFaaS Cloud\" />\n                        <FormControlLabel disabled value=\"local\" control={<Radio />} label=\"Kubernetes on Bare-metal\" />\n                        <FormControlLabel disabled value=\"local\" control={<Radio />} label=\"K3S on Bare-meta\" />\n                        <FormControlLabel disabled value=\"local\" control={<Radio />} label=\"Local Kind\" />\n                        <FormControlLabel disabled value=\"local\" control={<Radio />} label=\"Local Minikube\" />\n                    </RadioGroup>\n                </FormControl>\n                <br/>\n                <br/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                           Vote for your favorite option to enable for the next version. <a href=\"#\" onClick={handleVote}>Click here to vote</a>\n                  </Typography>\n        \n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button onClick={handleNext} size=\"small\" color=\"primary\">\n                    Next\n      </Button>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\nimport services from '../../../../services';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n  const handleTelarLink = (event) => {\n\n    event.preventDefault()\n    services.openURL('https://telar.press/')\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"#\"\n          onClick={handleTelarLink}\n        >\n          Telar\n        </Link>\n        {'  '} 2020\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { withRouter, matchPath } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n  let userLogin = 'de-amir'\n  const { pathname } = props.history.location;\n  const matchFunction = matchPath(pathname, {\n    path: '/:user',\n    strict: true,\n  });\n\n  if(matchFunction) {\n    userLogin =  matchFunction.params.user.toLowerCase()\n  }\n  const classes = useStyles();\n  const users = {\n    'de-amir': { \n      name: 'Amirhossein Movahedi',\n      avatar: '/images/avatars/amir.JPG',\n      bio: 'Distributed System Eng.'\n    },\n    'de-minhnguyen': { \n      name: 'Minh Tuan Nguyen',\n      avatar: '/images/avatars/minh.JPG',\n      bio: 'AI Eng.'\n    }\n  };\n  const user = users['de-amir']\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(Profile);\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer } from '@material-ui/core';\nimport SetupIcon from '@material-ui/icons/Build';\nimport { withRouter, matchPath } from 'react-router-dom';\nimport { SidebarNav } from './components';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport DeviceIcon from '@material-ui/icons/DevicesOther';\nimport ChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n  let user = ''\n  const { pathname } = props.history.location;\n  const matchFunction = matchPath(pathname, {\n    path: '/:user',\n    strict: true,\n  });\n\n  if(matchFunction) {\n    user = matchFunction.params.user\n  }\n  const classes = useStyles();\n\n  const pages = [\n    {\n      title: 'Setup Telar Social',\n      href: `/setup`,\n      icon: <SetupIcon />\n    }\n  ];\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default withRouter(Sidebar);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to TelarKit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://telar.press/market/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <h1 style={{color:'white'}}>Telar</h1>\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n          >\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/logo.png\"\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  iframe: {\n    width: '100%',\n    minHeight: 640,\n    border: 0\n  }\n}));\n\nconst Icons = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        className={classes.iframe}\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\n        title=\"Material Design icons\"\n      />\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            name=\"confirm\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { Notifications, Password } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Settings = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          md={7}\n          xs={12}\n        >\n          <Notifications />\n        </Grid>\n        <Grid\n          item\n          md={5}\n          xs={12}\n        >\n          <Password />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst variants = {\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\n  body1:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\n  body2:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\n  button: 'Vivamus ultrices rutrum fames dictumst'\n};\n\nconst Typography = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        {Object.keys(variants).map((key, i) => (\n          <Fragment key={i}>\n            <Grid\n              item\n              sm={3}\n              xs={12}\n            >\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\n            </Grid>\n            <Grid\n              item\n              sm={9}\n              xs={12}\n            >\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\n            </Grid>\n          </Fragment>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Typography;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport services from '../../services';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 645,\n  },\n  media: {\n    height: 277,\n  },\n});\n\nexport default function StepDone() {\n  const classes = useStyles();\n  const githubUsername = useSelector(state => state['inputs']['githubUsername'])\n\n  const handleLearnMore = () => {\n    services.openURL(\"https://telar.press\")\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://miro.medium.com/max/5748/1*M_jDiQwGmGvrKH_H1peKWQ.png\"\n          title=\"We are done!\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Done\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n          Wait until the build and deployment is done. To start login into admin page {`https://${githubUsername}.o6s.io/admin/login`}. Wait until you seen welcome page.\n          Now your Telar social is ready to use!😍🏆\n          - Signup page: {`https://${githubUsername}.o6s.io/auth/signup`}\n          - Login page: {`https://${githubUsername}.o6s.io/auth/login`}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" onClick={handleLearnMore} color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SelectSetup } from '../../components'\nimport { OFCC } from '../../components'\nimport Container from '@material-ui/core/Container';\nimport StepDone from '../../components/StepDone';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function SetupComponent() {\n  const setupState = useSelector(state => state['setupState'])\n  const classes = useStyles();\n  const [value, setValue] = React.useState('Controlled');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <>\n      <div style={{marginTop: 20}}></div>\n <Container maxWidth=\"sm\">\n     { setupState === 'init' ? <SelectSetup />\n     : (setupState === 'progress' ? <OFCC />  :  <StepDone/>)}\n      </Container>\n    </>\n  );\n}","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\n\nimport {\n  NotFound as NotFoundView\n} from './views';\n\nimport SetupComponent from './pages/Setup';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect\n        exact\n        from=\"/\"\n        to=\"/setup\"\n      />\n      <RouteWithLayout\n        component={SetupComponent}\n        exact\n        layout={MainLayout}\n        path=\"/setup\"\n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found\"\n      />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","const round = number => Math.round(number * 100) / 100\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n    console.log('reducer process time:', diff)\n    return newState\n  }\n  return createStore(monitoredReducer, initialState, enhancer)\n}\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  export default logger","import actionTypes from './actionTypes'\n\nconst initialState = {\n  inputs: {},\n  infoDialog: {message: \"\", url: \"\", open: false}\n}\n\n  function appReducer(state = initialState, action) {\n      const {payload} = action\n    switch (action.type) {\n      case actionTypes.SET_SETUP_STATE:\n        return {...state, setupState: payload.state}\n      case actionTypes.SET_SETUP_STEP:\n        return {...state, setupStep: payload.step}\n      case actionTypes.SET_STEP_CONDITION:\n        return {...state, stepCondition: {[payload.step]: payload.valid}}\n      case actionTypes.SET_INPUT:\n        return {...state, inputs: {...state.inputs, [payload.key]: payload.value}}\n      case actionTypes.SET_DEPLOY_OPEN:\n        return {...state, deployOpen: payload.open}\n      case actionTypes.POP_MESSAGE:\n        return {...state, popMessage: payload.message}\n      case actionTypes.SHOW_INFO_DIALOG:\n        return {...state, infoDialog: {message: payload.message, url: payload.url, open: true }}\n      case actionTypes.HIDE_INFO_DIALOG:\n        return {...state, infoDialog: {message: \"\", url: \"\", open: false }}\n      default:\n        return state\n    }\n  }\n\nexport default appReducer","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport actions from '../../store/actions';\nimport services from '../../services';\n\nexport default function DialogInfo() {\n  const dispatch = useDispatch()\n  const open = useSelector(state => state.infoDialog.open)\n  const message = useSelector(state => state.infoDialog.message)\n  const url = useSelector(state => state.infoDialog.url)\n\n  const handleClose = () => {\n    dispatch(actions.hideInfoDialog())\n  };\n\n  const handleOpenURL = (url) => {\n    services.openURL(url)\n    dispatch(actions.hideInfoDialog())\n\n  };\n\n  return (\n    \n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Info\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           {message && `${message[0].toUpperCase()}${message.slice(1)}`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          {(url && url !== \"\") && <Button onClick={() => handleOpenURL(url)} color=\"primary\" autoFocus>\n            Instruction\n          </Button>}\n        </DialogActions>\n      </Dialog>\n  );\n}","\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport theme from './theme';\nimport './assets/scss/index.scss';\nimport './App.css';\nimport Routes from './Routes';\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport actions from './store/actions';\nimport DialogInfo from './components/DialogInfo'\nconst browserHistory = createBrowserHistory();\n\n\n\nconst store = configureAppStore({\n  inputs: {\n    githubUsername: \"\",\n    projectDirectory: \"\",\n    bucketName: \"\",\n    mongoDBHost: \"\",\n    mongoDBPassword: \"\",\n    mongoDBName: \"test\",\n    siteKeyRecaptcha: \"\",\n    recaptchaKey: \"\",\n    githubOAuthSecret: \"\",\n    githubOAuthClientID: \"\",\n    adminUsername: \"\",\n    adminPassword: \"\",\n    gmail: \"\",\n    gmailPassword: \"\",\n    gateway: \"\",\n    payloadSecret: \"\",\n    websocketURL: \"\",\n    installGit: false,\n    installKubeseal: false,\n    githubUsernameRegisterd: false,\n    cloneTelarWeb: false,\n    cloneTsServerless: false,\n    cloneTsUi: false,\n    openFaaSApp: false,\n    openFaaSAppHasRepos: false,\n    githubSSHKey: false,\n    firebaseServiceAccount: false,\n    firebaseStorage: false,\n    mongoDBConnection: false,\n    websocketConnection: false,\n    loadingCheckIngredients: false,\n    loadingFirebaseStorage: false,\n    loadingMongoDB: false,\n    loadingWebsocket: false,\n    loadingStackYaml: false,\n    loadingCreateSecret: false,\n    loadingPublicPrivateKey: false,\n    deployTelarWeb: false,\n    deployTsServerless: false,\n    deploySocialUi: false,\n    deployOpen: false,\n  }, setupState: 'init', setupStep: 0, stepCondition: {}, infoDialog: {message: \"\", url: \"\", open: false}\n})\n\nlet ws;\n\nif (window.WebSocket === undefined) {\n    alert(\"Your browser does not support WebSockets\");\n   \n} else {\n    ws = initWS();\n}\n\nfunction initWS() {\n    let socket = new WebSocket(\"ws://localhost:8000/ws\")\n     \n    socket.onopen = function() {\n       store.dispatch(actions.popMessage(\"Ready!\"))\n    };\n    socket.onmessage = function (e) {\n      const action = JSON.parse(e.data)\n      console.log('action', action)\n      console.log('e.data', e.data)\n      store.dispatch(action)\n    }\n    socket.onclose = function () {\n      store.dispatch(actions.popMessage(\"Socket closed\"))\n    }\n\n    return socket;\n}\n\nfunction AppSnackbar() {\n  const dispatch = useDispatch()\n\n  const popMessage = useSelector(state => state['popMessage'])\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch(actions.popMessage(\"\"))\n  };\n\n  return (\n    <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'left',\n    }}\n    open={popMessage !== \"\"}\n    autoHideDuration={6000}\n    onClose={handleClose}\n    message={popMessage}\n    action={\n      <React.Fragment>\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </React.Fragment>\n    }\n  />\n  )\n}\n\n\nfunction App() {\n\n  // Retrieving data from an AJAX request.\n  // Remember that the function passed to useEffect will run,\n  // after render is fixed on the screen.\n  // See https://reactjs.org/docs/hooks-reference.html#useeffect\n  useEffect(() => {\n   \n  });\n\n  \n  return (\n    <Router history={browserHistory}>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <Routes />\n          <AppSnackbar />\n          <DialogInfo />\n        </ThemeProvider>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\nimport loggerMiddleware from './middleware/logger'\nimport rootReducer from './reducers'\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n  return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}